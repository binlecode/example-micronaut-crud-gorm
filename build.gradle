plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
}

apply plugin:"application"
apply plugin:"groovy"

version "0.1"
group "test"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.0.4'
    }
}

dependencies {
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    compile "io.micronaut:micronaut-runtime-groovy"
    compile "io.micronaut:micronaut-validation"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testCompile("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile "junit:junit:4.12"
    testCompile "io.micronaut:micronaut-inject-java"
    testCompile "org.hamcrest:hamcrest-all:1.3"
    // additional spock test integration from Micronaut
    testCompile "io.micronaut.test:micronaut-test-spock:1.0.2"

    // hibernate gorm and entity validation
    compile 'io.micronaut.configuration:micronaut-hibernate-gorm'
    compile "io.micronaut.configuration:micronaut-hibernate-validator"

    // this is needed for hibernate 2nd level cache
    runtime "org.hibernate:hibernate-ehcache:5.1.9.Final"

    // Use Tomcat connection pool
    runtime 'org.apache.tomcat:tomcat-jdbc'
    // Use H2 database driver
    runtime  'com.h2database:h2'
    runtime 'mysql:mysql-connector-java:5.1.40'

    // swagger api doc, this will display at gradle run console output:
    // ...
    // > Task :compileGroovy
    // Note: Generating OpenAPI Documentation
    // Note: Writing OpenAPI YAML to destination: file://.../example-micronaut-crud-gorm/build/classes/groovy/main/META-INF/swagger/hello-world-0.1.yml
    // ...
    // for groovy the scope should be 'compileOnly'
    compileOnly "io.micronaut.configuration:micronaut-openapi"
    // for java the scope should be 'annotationProcessor'
    //annotationProcessor "io.micronaut.configuration:micronaut-openapi"
    compile "io.swagger.core.v3:swagger-annotations"

    // add server side views rendering support
    // Views and templates can be placed in src/main/resources/views
    compile "io.micronaut:micronaut-views"
    // use Thymeleaf for view template engine
    runtime "org.thymeleaf:thymeleaf:3.0.11.RELEASE"



}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "example.Application"
tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}
